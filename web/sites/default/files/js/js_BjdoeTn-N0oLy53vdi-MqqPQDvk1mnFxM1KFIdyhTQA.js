/* @license GNU-GPL-2.0-or-later https://www.drupal.org/licensing/faq */
(function($,Drupal,once){'use strict';Drupal.webform=Drupal.webform||{};Drupal.webform.elementHelpIcon=Drupal.webform.elementHelpIcon||{};Drupal.webform.elementHelpIcon.options=Drupal.webform.elementHelpIcon.options||{};Drupal.behaviors.webformElementHelpIcon={attach:function(context){if(!window.tippy)return;var hideOnEsc={name:'hideOnEsc',defaultValue:true,fn:function fn(_ref){var hide=_ref.hide;function onKeyDown(event){if(event.keyCode===27)hide();}return {onShow:function onShow(){document.addEventListener('keydown',onKeyDown);},onHide:function onHide(){document.removeEventListener('keydown',onKeyDown);}};}};$(once('webform-element-help','.js-webform-element-help',context)).each(function(){var $link=$(this);$link.on('click',function(event){event.preventDefault();});var options=$.extend({content:$link.attr('data-webform-help'),delay:100,allowHTML:true,interactive:true,plugins:[hideOnEsc]},Drupal.webform.elementHelpIcon.options);tippy(this,options);});}};})(jQuery,Drupal,once);;
(function($,Drupal,once){'use strict';Drupal.behaviors.webformSubmitTrigger={attach:function(context){$(once('webform-trigger-submit','[data-webform-trigger-submit]')).on('change',function(){var submit=$(this).attr('data-webform-trigger-submit');$(submit).trigger('mousedown');});}};})(jQuery,Drupal,once);;
(function($,Drupal){Drupal.behaviors.fileValidateAutoAttach={attach(context,settings){const $context=$(context);let elements;function initFileValidation(selector){$(once('fileValidate',$context.find(selector))).on('change.fileValidate',{extensions:elements[selector]},Drupal.file.validateExtension);}if(settings.file&&settings.file.elements){elements=settings.file.elements;Object.keys(elements).forEach(initFileValidation);}},detach(context,settings,trigger){const $context=$(context);let elements;function removeFileValidation(selector){$(once.remove('fileValidate',$context.find(selector))).off('change.fileValidate',Drupal.file.validateExtension);}if(trigger==='unload'&&settings.file&&settings.file.elements){elements=settings.file.elements;Object.keys(elements).forEach(removeFileValidation);}}};Drupal.behaviors.fileAutoUpload={attach(context){$(once('auto-file-upload','input[type="file"]',context)).on('change.autoFileUpload',Drupal.file.triggerUploadButton);},detach(context,settings,trigger){if(trigger==='unload')$(once.remove('auto-file-upload','input[type="file"]',context)).off('.autoFileUpload');}};Drupal.behaviors.fileButtons={attach(context){const $context=$(context);$context.find('.js-form-submit').on('mousedown',Drupal.file.disableFields);$context.find('.js-form-managed-file .js-form-submit').on('mousedown',Drupal.file.progressBar);},detach(context,settings,trigger){if(trigger==='unload'){const $context=$(context);$context.find('.js-form-submit').off('mousedown',Drupal.file.disableFields);$context.find('.js-form-managed-file .js-form-submit').off('mousedown',Drupal.file.progressBar);}}};Drupal.behaviors.filePreviewLinks={attach(context){$(context).find('div.js-form-managed-file .file a').on('click',Drupal.file.openInNewWindow);},detach(context){$(context).find('div.js-form-managed-file .file a').off('click',Drupal.file.openInNewWindow);}};Drupal.file=Drupal.file||{validateExtension(event){event.preventDefault();$('.file-upload-js-error').remove();const extensionPattern=event.data.extensions.replace(/,\s*/g,'|');if(extensionPattern.length>1&&this.value.length>0){const acceptableMatch=new RegExp(`\\.(${extensionPattern})$`,'gi');if(!acceptableMatch.test(this.value)){const error=Drupal.t('The selected file %filename cannot be uploaded. Only files with the following extensions are allowed: %extensions.',{'%filename':this.value.replace('C:\\fakepath\\',''),'%extensions':extensionPattern.replace(/\|/g,', ')});$(this).closest('div.js-form-managed-file').prepend(`<div class="messages messages--error file-upload-js-error" aria-live="polite">${error}</div>`);this.value='';event.stopImmediatePropagation();}}},triggerUploadButton(event){$(event.target).closest('.js-form-managed-file').find('.js-form-submit[data-drupal-selector$="upload-button"]').trigger('mousedown');},disableFields(event){const $clickedButton=$(this);$clickedButton.trigger('formUpdated');let $enabledFields=[];if($clickedButton.closest('div.js-form-managed-file').length>0)$enabledFields=$clickedButton.closest('div.js-form-managed-file').find('input.js-form-file');const $fieldsToTemporarilyDisable=$('div.js-form-managed-file input.js-form-file').not($enabledFields).not(':disabled');$fieldsToTemporarilyDisable.prop('disabled',true);setTimeout(()=>{$fieldsToTemporarilyDisable.prop('disabled',false);},1000);},progressBar(event){const $clickedButton=$(this);const $progressId=$clickedButton.closest('div.js-form-managed-file').find('input.file-progress');if($progressId.length){const originalName=$progressId.attr('name');$progressId.attr('name',originalName.match(/APC_UPLOAD_PROGRESS|UPLOAD_IDENTIFIER/)[0]);setTimeout(()=>{$progressId.attr('name',originalName);},1000);}setTimeout(()=>{$clickedButton.closest('div.js-form-managed-file').find('div.ajax-progress-bar').slideDown();},500);$clickedButton.trigger('fileUpload');},openInNewWindow(event){event.preventDefault();$(this).attr('target','_blank');window.open(this.href,'filePreview','toolbar=0,scrollbars=1,location=1,statusbar=1,menubar=0,resizable=1,width=500,height=550');}};})(jQuery,Drupal);;
(function($,Drupal,window){function TableResponsive(table){this.table=table;this.$table=$(table);this.showText=Drupal.t('Show all columns');this.hideText=Drupal.t('Hide lower priority columns');this.$headers=this.$table.find('th');this.$link=$('<button type="button" class="link tableresponsive-toggle"></button>').attr('title',Drupal.t('Show table cells that were hidden to make the table fit within a small screen.')).on('click',$.proxy(this,'eventhandlerToggleColumns'));this.$table.before($('<div class="tableresponsive-toggle-columns"></div>').append(this.$link));$(window).on('resize.tableresponsive',$.proxy(this,'eventhandlerEvaluateColumnVisibility')).trigger('resize.tableresponsive');}Drupal.behaviors.tableResponsive={attach(context,settings){once('tableresponsive','table.responsive-enabled',context).forEach((table)=>{TableResponsive.tables.push(new TableResponsive(table));});}};$.extend(TableResponsive,{tables:[]});$.extend(TableResponsive.prototype,{eventhandlerEvaluateColumnVisibility(e){const pegged=parseInt(this.$link.data('pegged'),10);const hiddenLength=this.$headers.filter('.priority-medium:hidden, .priority-low:hidden').length;if(hiddenLength>0){this.$link.show();this.$link[0].textContent=this.showText;}if(!pegged&&hiddenLength===0){this.$link.hide();this.$link[0].textContent=this.hideText;}},eventhandlerToggleColumns(e){e.preventDefault();const self=this;const $hiddenHeaders=this.$headers.filter('.priority-medium:hidden, .priority-low:hidden');this.$revealedCells=this.$revealedCells||$();if($hiddenHeaders.length>0){$hiddenHeaders.each(function(index,element){const $header=$(this);const position=$header.prevAll('th').length;self.$table.find('tbody tr').each(function(){const $cells=$(this).find('td').eq(position);$cells.show();self.$revealedCells=$().add(self.$revealedCells).add($cells);});$header.show();self.$revealedCells=$().add(self.$revealedCells).add($header);});this.$link[0].textContent=this.hideText;this.$link.data('pegged',1);}else{this.$revealedCells.hide();this.$revealedCells.each(function(index,element){const $cell=$(this);const properties=$cell.attr('style').split(';');const newProps=[];const match=/^display\s*:\s*none$/;for(let i=0;i<properties.length;i++){const prop=properties[i];prop.trim();const isDisplayNone=match.exec(prop);if(isDisplayNone)continue;newProps.push(prop);}$cell.attr('style',newProps.join(';'));});this.$link[0].textContent=this.showText;this.$link.data('pegged',0);$(window).trigger('resize.tableresponsive');}}});Drupal.TableResponsive=TableResponsive;})(jQuery,Drupal,window);;
(($,Drupal)=>{Drupal.behaviors.claroTableDrag={attach(context,settings){const createItemWrapBoundaries=(row)=>{const $row=$(row);const $firstCell=$row.find('td:first-of-type').eq(0).wrapInner(Drupal.theme('tableDragCellContentWrapper')).wrapInner($(Drupal.theme('tableDragCellItemsWrapper')).addClass('js-tabledrag-cell-content'));const $targetElem=$firstCell.find('.js-tabledrag-cell-content');$targetElem.eq(0).find('> .tabledrag-cell-content__item > .js-tabledrag-handle, > .tabledrag-cell-content__item > .js-indentation').prependTo($targetElem);};Object.keys(settings.tableDrag||{}).forEach((base)=>{once('claroTabledrag',$(context).find(`#${base}`).find('> tr.draggable, > tbody > tr.draggable')).forEach(createItemWrapBoundaries);});}};$.extend(Drupal.tableDrag.prototype.row.prototype,{markChanged(){const marker=$(Drupal.theme('tableDragChangedMarker')).addClass('js-tabledrag-changed-marker');const cell=$(this.element).find('td:first-of-type');if(cell.find('.js-tabledrag-changed-marker').length===0)cell.find('.js-tabledrag-handle').after(marker);Drupal.tableDrag[this.table.id].changedRowIds.add(this.element.id);},onIndent(){$(this.table).find('.tabledrag-cell > .js-indentation').each((index,indentToMove)=>{const $indentToMove=$(indentToMove);const $cellContent=$indentToMove.siblings('.tabledrag-cell-content');$indentToMove.prependTo($cellContent);});}});$.extend(Drupal.theme,{tableDragIndentation(){return '<div class="js-indentation indentation"><svg xmlns="http://www.w3.org/2000/svg" class="tree" width="25" height="25" viewBox="0 0 25 25"><path class="tree__item tree__item-child-ltr tree__item-child-last-ltr tree__item-horizontal tree__item-horizontal-right" d="M12,12.5 H25" stroke="#888"/><path class="tree__item tree__item-child-rtl tree__item-child-last-rtl tree__item-horizontal tree__horizontal-left" d="M0,12.5 H13" stroke="#888"/><path class="tree__item tree__item-child-ltr tree__item-child-rtl tree__item-child-last-ltr tree__item-child-last-rtl tree__vertical tree__vertical-top" d="M12.5,12 v-99" stroke="#888"/><path class="tree__item tree__item-child-ltr tree__item-child-rtl tree__vertical tree__vertical-bottom" d="M12.5,12 v99" stroke="#888"/></svg></div>';},tableDragChangedWarning(){return `<div class="tabledrag-changed-warning messages messages--warning" role="alert">${Drupal.theme('tableDragChangedMarker')} ${Drupal.t('You have unsaved changes.')}</div>`;},tableDragHandle:()=>`<a href="#" title="${Drupal.t('Drag to re-order')}" class="tabledrag-handle js-tabledrag-handle"></a>`,tableDragToggle:()=>`<div class="tabledrag-toggle-weight-wrapper" data-drupal-selector="tabledrag-toggle-weight-wrapper">
            <button type="button" class="link action-link tabledrag-toggle-weight" data-drupal-selector="tabledrag-toggle-weight"></button>
            </div>`,toggleButtonContent:(show)=>{const classes=['action-link','action-link--extrasmall','tabledrag-toggle-weight'];let text='';if(show){classes.push('action-link--icon-hide');text=Drupal.t('Hide row weights');}else{classes.push('action-link--icon-show');text=Drupal.t('Show row weights');}return `<span class="${classes.join(' ')}">${text}</a>`;},tableDragCellContentWrapper(){return '<div class="tabledrag-cell-content__item"></div>';},tableDragCellItemsWrapper(){return '<div class="tabledrag-cell-content"></div>';}});})(jQuery,Drupal);;
(function($,Drupal){Drupal.behaviors.filterGuidelines={attach(context){function updateFilterGuidelines(event){const $this=$(event.target);const {value}=event.target;$this.closest('.js-filter-wrapper').find('[data-drupal-format-id]').hide().filter(`[data-drupal-format-id="${value}"]`).show();}$(once('filter-guidelines','.js-filter-guidelines',context)).find(':header').hide().closest('.js-filter-wrapper').find('select.js-filter-list').on('change.filterGuidelines',updateFilterGuidelines).trigger('change.filterGuidelines');}};})(jQuery,Drupal);;
